# -*- coding: utf-8 -*-
# üìÑ –§–∞–π–ª: archive_extractors.py
# üìÇ –ü—É—Ç—å: core/tools/archive_extractors.py
# üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ ZIP-–∞—Ä—Ö–∏–≤–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏

import zipfile
import os
import logging

logger = logging.getLogger(__name__)

def extract_text_from_zip(zip_path: str, extract_to: str = "./tmp") -> list[str]:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏–∑ ZIP-–∞—Ä—Ö–∏–≤–∞.

    Args:
        zip_path (str): –ü—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É.
        extract_to (str): –ü–∞–ø–∫–∞, –∫—É–¥–∞ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã.

    Returns:
        list[str]: –°–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤, –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤.
    """
    if not zipfile.is_zipfile(zip_path):
        raise ValueError(f"{zip_path} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ZIP-–∞—Ä—Ö–∏–≤–æ–º")

    os.makedirs(extract_to, exist_ok=True)
    texts = []

    with zipfile.ZipFile(zip_path, 'r') as archive:
        for filename in archive.namelist():
            if not filename.endswith(('.txt', '.md', '.log', '.csv')):
                logger.debug(f"–ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª: {filename}")
                continue
            archive.extract(filename, path=extract_to)
            full_path = os.path.join(extract_to, filename)
            try:
                with open(full_path, 'r', encoding='utf-8') as f:
                    texts.append(f.read())
            except UnicodeDecodeError:
                logger.warning(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è UTF-8: {filename}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {filename}: {e}")

    return texts
