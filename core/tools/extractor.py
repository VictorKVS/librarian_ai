# -*- coding: utf-8 -*-
# üìÑ –§–∞–π–ª: extractor.py
# üìÇ –ü—É—Ç—å: core/tools/extractor.py
# üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π (NER) –∏–∑ —Ç–µ–∫—Å—Ç–∞ ‚Äî –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞

from typing import Dict

def extract_entities(text: str) -> Dict[str, list]:
    """
    üìå –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–≥–ª—É—à–∫–∞.
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (NER).

    –í –±—É–¥—É—â–µ–º: –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å SpaCy, HuggingFace –∏–ª–∏ OpenAI –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π:
        - PERSON, ORG, LOCATION, EVENT, CONCEPT, ...

    Args:
        text (str): –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç

    Returns:
        dict: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—É—â–Ω–æ—Å—Ç–µ–π –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    """
    # TODO: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è NER-–º–æ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, spacy.load("en_core_web_sm") –∏–ª–∏ transformers)
    return {
        "PERSON": [],
        "ORG": [],
        "LOCATION": [],
        "EVENT": [],
        "CONCEPT": [],
    }
