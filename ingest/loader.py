# üìÑ –§–∞–π–ª: loader.py
# üìÇ –ü—É—Ç—å: ingest/
# üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ –Ω–µ–≥–æ —Å—ã—Ä–æ–π —Ç–µ–∫—Å—Ç + –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ —Å–ª–æ–≤–∞—Ä—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞.

import os


def load_file(filepath):
    ext = os.path.splitext(filepath)[-1].lower()
    metadata = {"type": ext[1:] if ext.startswith('.') else ext}

    if ext in ['.txt']:
        with open(filepath, 'r', encoding='utf-8') as f:
            return f.read(), metadata

    elif ext in ['.md']:
        with open(filepath, 'r', encoding='utf-8') as f:
            return f.read(), metadata

    elif ext in ['.docx']:
        from docx import Document
        doc = Document(filepath)
        text = "\n".join([p.text for p in doc.paragraphs])
        return text, metadata

    elif ext in ['.pdf']:
        from PyPDF2 import PdfReader
        reader = PdfReader(filepath)
        text = "\n".join([page.extract_text() for page in reader.pages if page.extract_text()])
        return text, metadata

    else:
        raise ValueError(f"‚ùó –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: {ext}")
